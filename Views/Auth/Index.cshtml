@model IEnumerable<Retail_Management_System.Models.User>

@{
    ViewData["Title"] = "User Accounts";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>User Accounts</h1>
        <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-circle me-2"></i>Create New User</a>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    
    <div class="card mb-4">
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-3">
                <div class="col-md-10">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by name or username..." />
                    </div>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">Search</button>
                </div>
            </form>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Username)</th>
                            <th>@Html.DisplayNameFor(model => model.Email)</th>
                            <th>@Html.DisplayNameFor(model => model.FullName)</th>
                            <th>@Html.DisplayNameFor(model => model.Role.RoleName)</th>
                            <th>@Html.DisplayNameFor(model => model.Status)</th>
                            <th>@Html.DisplayNameFor(model => model.CreatedDate)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Username)</td>
                                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                                <td>@Html.DisplayFor(modelItem => item.Role.RoleName)</td>
                                <td>
                                    @if (item.Status == 1)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactive</span>
                                    }
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning"><i class="bi bi-pencil-square"></i></a>
                                        @if (item.Role.RoleName == "Staff")
                                        {
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger"><i class="bi bi-trash"></i></a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
            @{
                int currentPage = (int)ViewData["CurrentPage"];
                int totalPages = (int)ViewData["TotalPages"];
            }
            
            @if (totalPages > 1)
            {
                <div class="d-flex justify-content-between align-items-center mt-4">
                    <div>
                        <span>Showing page @currentPage of @totalPages</span>
                    </div>
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-searchString="@ViewData["CurrentFilter"]">Previous</a>
                            </li>
                            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-searchString="@ViewData["CurrentFilter"]">Next</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
        </div>
    </div>
</div>